// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "white",
        }
      }
    >
      <TextInput
        borderColor="grey"
        onChangeText={[Function]}
        placeholder="Introduzca aquí su nombre"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <TextInput
        borderColor="grey"
        keyboardType="email-address"
        onChangeText={[Function]}
        placeholder="Introduzca aquí su correo electronico"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "grey",
            "borderWidth": 0.5,
            "flexDirection": "row",
            "margin": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "width": "95%",
              },
              Object {
                "color": "grey",
              },
            ]
          }
        >
          Seleccione el tipo de mascota
        </Text>
        <View
          onPress={undefined}
          style={undefined}
          underlayColor="white"
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "grey",
                  "fontSize": 20,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-start",
          }
        }
      >
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onModalHide={[Function]}
          onRequestClose={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
            testID={undefined}
          />
          <View
            collapsable={undefined}
            onModalHide={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "marginTop": "75%",
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                onPress={undefined}
                style={
                  Array [
                    false,
                    false,
                    false,
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
                underlayColor="white"
              >
                <Text
                  accessible={true}
                  allowFontScaling={false}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "grey",
                        "fontSize": 30,
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                      ],
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "borderColor": "grey",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "margin": 10,
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "perro",
                      "textColor": undefined,
                      "value": "perro",
                    },
                    Object {
                      "label": "gato",
                      "textColor": undefined,
                      "value": "gato",
                    },
                    Object {
                      "label": "conejo",
                      "textColor": undefined,
                      "value": "conejo",
                    },
                    Object {
                      "label": "hamster",
                      "textColor": undefined,
                      "value": "hamster",
                    },
                    Object {
                      "label": "iguana",
                      "textColor": undefined,
                      "value": "iguana",
                    },
                    Object {
                      "label": "hurón",
                      "textColor": undefined,
                      "value": "hurón",
                    },
                    Object {
                      "label": "tortuga",
                      "textColor": undefined,
                      "value": "tortuga",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "grey",
                  "borderRadius": 10,
                  "margin": 10,
                  "opacity": 1,
                  "padding": 20,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "white",
                  }
                }
              >
                Confirmar
              </Text>
            </View>
          </View>
        </Modal>
      </View>
      <TextInput
        borderColor="grey"
        onChangeText={[Function]}
        placeholder="Introduzca aquí la raza del animal encontrado"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <TextInput
        borderColor="grey"
        onChangeText={[Function]}
        placeholder="Introduzca aquí el tamaño aproximado"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "borderWidth": 0.5,
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "space-between",
                "margin": 10,
                "paddingRight": 5,
              },
              Object {
                "backgroundColor": "transparent",
                "borderColor": "grey",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "marginBottom": 10,
                  "marginLeft": 15,
                  "marginTop": 10,
                  "paddingBottom": 5,
                  "paddingTop": 5,
                },
                Object {
                  "color": "grey",
                },
              ]
            }
          >
            Seleccione cuando encontro a la mascota
          </Text>
          <View
            onPress={undefined}
            style={
              Array [
                false,
                false,
                false,
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
            underlayColor="white"
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "grey",
                    "fontSize": 30,
                  },
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "EvilIcons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onModalHide={[Function]}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "black",
              "bottom": 0,
              "height": 1334,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "width": 750,
            }
          }
          testID={undefined}
        />
        <View
          collapsable={undefined}
          onModalHide={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
              "margin": 10,
              "transform": Array [
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "marginBottom": 8,
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#d5d5d5",
                  "borderBottomWidth": 0.5,
                  "padding": 14,
                }
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "color": "#8f8f8f",
                      "fontSize": 13,
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Pick a date
              </Text>
            </View>
            <View
              onStartShouldSetResponderCapture={[Function]}
            >
              <View
                style={undefined}
              >
                <RCTDatePicker
                  date={1512086400000}
                  maximumDate={undefined}
                  minimumDate={undefined}
                  minuteInterval={undefined}
                  mode="date"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "height": 216,
                    }
                  }
                  timeZoneOffsetInMinutes={undefined}
                />
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "borderColor": "#d5d5d5",
                    "borderTopWidth": 0.5,
                    "height": 57,
                    "justifyContent": "center",
                  },
                ]
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#007ff9",
                      "fontSize": 20,
                      "fontWeight": "normal",
                      "textAlign": "center",
                    },
                    undefined,
                  ]
                }
              >
                Confirm
              </Text>
            </View>
          </View>
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 13,
                  "height": 57,
                  "justifyContent": "center",
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#007ff9",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "padding": 10,
                    "textAlign": "center",
                  },
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </Modal>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "grey",
            "borderWidth": 0.5,
            "flexDirection": "row",
            "margin": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "width": "95%",
              },
              Object {
                "color": "grey",
              },
            ]
          }
        >
          Comunidad autónoma
        </Text>
        <View
          onPress={undefined}
          style={undefined}
          underlayColor="white"
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "grey",
                  "fontSize": 20,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-start",
          }
        }
      >
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onModalHide={[Function]}
          onRequestClose={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
            testID={undefined}
          />
          <View
            collapsable={undefined}
            onModalHide={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "marginTop": "75%",
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                onPress={undefined}
                style={
                  Array [
                    false,
                    false,
                    false,
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
                underlayColor="white"
              >
                <Text
                  accessible={true}
                  allowFontScaling={false}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "grey",
                        "fontSize": 30,
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                      ],
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "borderColor": "grey",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "margin": 10,
                }
              }
            >
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "Andalucia",
                      "textColor": undefined,
                      "value": "Andalucia",
                    },
                    Object {
                      "label": "Aragon",
                      "textColor": undefined,
                      "value": "Aragon",
                    },
                    Object {
                      "label": "Canarias",
                      "textColor": undefined,
                      "value": "Canarias",
                    },
                    Object {
                      "label": "Cantabria",
                      "textColor": undefined,
                      "value": "Cantabria",
                    },
                    Object {
                      "label": "Castilla la Mancha",
                      "textColor": undefined,
                      "value": "Castilla la Mancha",
                    },
                    Object {
                      "label": "Castilla y Leon",
                      "textColor": undefined,
                      "value": "Castilla y Leon",
                    },
                    Object {
                      "label": "Cataluña",
                      "textColor": undefined,
                      "value": "Cataluña",
                    },
                    Object {
                      "label": "Ceuta",
                      "textColor": undefined,
                      "value": "Ceuta",
                    },
                    Object {
                      "label": "Comunidad Valenciana",
                      "textColor": undefined,
                      "value": "Comunidad Valenciana",
                    },
                    Object {
                      "label": "Extremadura",
                      "textColor": undefined,
                      "value": "Extremadura",
                    },
                    Object {
                      "label": "Islas Baleares",
                      "textColor": undefined,
                      "value": "Islas Baleares",
                    },
                    Object {
                      "label": "Galicia",
                      "textColor": undefined,
                      "value": "Galicia",
                    },
                    Object {
                      "label": "Madrid",
                      "textColor": undefined,
                      "value": "Madrid",
                    },
                    Object {
                      "label": "Melilla",
                      "textColor": undefined,
                      "value": "Melilla",
                    },
                    Object {
                      "label": "Murcia",
                      "textColor": undefined,
                      "value": "Murcia",
                    },
                    Object {
                      "label": "Navarra",
                      "textColor": undefined,
                      "value": "Navarra",
                    },
                    Object {
                      "label": "País Vasco",
                      "textColor": undefined,
                      "value": "País Vasco",
                    },
                    Object {
                      "label": "Principado de asturias",
                      "textColor": undefined,
                      "value": "Principado de asturias",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "grey",
                  "borderRadius": 10,
                  "margin": 10,
                  "opacity": 1,
                  "padding": 20,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "white",
                  }
                }
              >
                Confirmar
              </Text>
            </View>
          </View>
        </Modal>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "grey",
            "borderWidth": 0.5,
            "flexDirection": "row",
            "margin": 10,
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "width": "95%",
              },
              Object {
                "color": "grey",
              },
            ]
          }
        >
          Provincia
        </Text>
        <View
          onPress={undefined}
          style={undefined}
          underlayColor="white"
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "grey",
                  "fontSize": 20,
                },
                Array [
                  Object {
                    "backgroundColor": "transparent",
                  },
                  undefined,
                ],
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-start",
          }
        }
      >
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onModalHide={[Function]}
          onRequestClose={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            collapsable={undefined}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
            testID={undefined}
          />
          <View
            collapsable={undefined}
            onModalHide={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "backgroundColor": "white",
                "flex": 1,
                "justifyContent": "center",
                "margin": 37.5,
                "marginTop": "75%",
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                onPress={undefined}
                style={
                  Array [
                    false,
                    false,
                    false,
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
                underlayColor="white"
              >
                <Text
                  accessible={true}
                  allowFontScaling={false}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "grey",
                        "fontSize": 30,
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                      ],
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "borderColor": "grey",
                  "borderRadius": 10,
                  "borderWidth": 1,
                  "margin": 10,
                }
              }
            >
              <RCTPicker
                items={Array []}
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "grey",
                  "borderRadius": 10,
                  "margin": 10,
                  "opacity": 1,
                  "padding": 20,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "white",
                  }
                }
              >
                Confirmar
              </Text>
            </View>
          </View>
        </Modal>
      </View>
      <TextInput
        borderColor="grey"
        onChangeText={[Function]}
        placeholder="Introduzca aquí la ciudad o municipio"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <TextInput
        borderColor="grey"
        onChangeText={[Function]}
        placeholder="Introduzca aquí una description del animal"
        placeholderTextColor="grey"
        style={
          Array [
            Object {
              "borderColor": "grey",
              "borderWidth": 0.5,
              "color": "grey",
              "fontSize": 14,
              "height": 50,
              "margin": 10,
              "paddingLeft": 15,
            },
            Object {
              "color": "grey",
            },
          ]
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "borderColor": "grey",
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "margin": 10,
                "padding": 5,
              },
              Object {
                "backgroundColor": "#99d1ed",
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "white",
                "fontSize": 18,
                "marginLeft": 20,
                "marginRight": 10,
                "paddingTop": 10,
              }
            }
          >
            Añade una foto de la mascota
          </Text>
          <View
            onPress={undefined}
            style={
              Array [
                false,
                false,
                false,
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
            underlayColor="white"
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "white",
                    "fontSize": 50,
                  },
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "EvilIcons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#e1e8ee",
              "height": 1,
            },
            Object {
              "backgroundColor": "#d3d5d6",
              "margin": 10,
              "marginBottom": 20,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "marginLeft": 15,
              "marginRight": 15,
            },
            undefined,
            undefined,
            Object {
              "borderRadius": 3,
            },
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "marginBottom": 15,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#9E9E9E",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 19,
                },
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Object {
                  "backgroundColor": "grey",
                },
                Object {
                  "borderRadius": 3,
                },
                false,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "white",
                      "fontSize": 20,
                    },
                    undefined,
                    false,
                    undefined,
                    undefined,
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              Guardar datos
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
